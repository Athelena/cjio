"""Geometry methods and functions

"""
import pytest

from cjio import model

class TestGeometry:
    @pytest.mark.parametrize("type, boundary, result", [
        ('multipoint', [], []),
        ('multipoint',
         [2,4,5],
         [(2.0,1.0,0.0),(4.0,1.0,0.0),(5.0,1.0,0.0)]),
        ('multisurface',
         [[[2,4,5]]],
         [[[(2.0,1.0,0.0),(4.0,1.0,0.0),(5.0,1.0,0.0)]]]),
        ('multisurface',
         [[[2,4,5],[2,4,5]]],
         [[[(2.0,1.0,0.0),(4.0,1.0,0.0),(5.0,1.0,0.0)],[(2.0,1.0,0.0),(4.0,1.0,0.0),(5.0,1.0,0.0)]]]),
        ('solid',
         [
             [ [[0, 3, 2]], [[4, 5, 1]], [[0, 1, 5]] ],
             [ [[0, 3, 2]], [[4, 5, 1]], [[0, 1, 5]] ]
         ],
         [
             [ [[(0.0, 1.0, 0.0), (3.0, 1.0, 0.0), (2.0, 1.0, 0.0)]], [[(4.0, 1.0, 0.0), (5.0, 1.0, 0.0), (1.0, 1.0, 0.0)]],
               [[(0.0, 1.0, 0.0), (1.0, 1.0, 0.0), (5.0, 1.0, 0.0)]]],
             [ [[(0.0, 1.0, 0.0), (3.0, 1.0, 0.0), (2.0, 1.0, 0.0)]], [[(4.0, 1.0, 0.0), (5.0, 1.0, 0.0), (1.0, 1.0, 0.0)]],
               [[(0.0, 1.0, 0.0), (1.0, 1.0, 0.0), (5.0, 1.0, 0.0)]]]
         ]
         ),
        ('compositesolid',
         [
            [ [ [[0, 3, 2]], [[4, 5, 1]], [[0, 1, 5]] ] ],
            [ [ [[0, 3, 2]], [[4, 5, 1]], [[0, 1, 5]] ] ]
        ],
         [
             [[[[(0.0, 1.0, 0.0), (3.0, 1.0, 0.0), (2.0, 1.0, 0.0)]], [[(4.0, 1.0, 0.0), (5.0, 1.0, 0.0), (1.0, 1.0, 0.0)]],
               [[(0.0, 1.0, 0.0), (1.0, 1.0, 0.0), (5.0, 1.0, 0.0)]]]],
             [[[[(0.0, 1.0, 0.0), (3.0, 1.0, 0.0), (2.0, 1.0, 0.0)]], [[(4.0, 1.0, 0.0), (5.0, 1.0, 0.0), (1.0, 1.0, 0.0)]],
               [[(0.0, 1.0, 0.0), (1.0, 1.0, 0.0), (5.0, 1.0, 0.0)]]]]
         ]
         )
    ])
    def test_dereference_boundary(self, vertices, type, boundary, result):
        geom = model.Geometry(type=type, boundaries=boundary, vertices=vertices)
        assert geom.boundaries == result